import "core-js/stable";
import "regenerator-runtime/runtime";
import { processTest, populateTransaction } from './test.fixture';

const contractName = "IRentalProtocol";
const contractAddr = "0x5495bec6703adc6d395e50bb2c6a93bb4d2af56a";
const testNetwork = "polygon";
const chainID = 137;
const testLabel = "Rental - Create Public Offer";  // <= Name of the test
const testDirSuffix = "rental-create-public-offer"; // <= directory to compare device snapshots to
const signedPlugin = false;

const devices = [
  {
      name: "nanos",
      label: "Nano S",
      steps: 7 + 1, // <= Define the number of steps for this test case and this device
  },
  {
      name: "nanox",
      label: "Nano X",
      steps: 7, // <= Define the number of steps for this test case and this device
  },
  {
      name: "nanosp",
      label: "Nano S+",
      steps: 7, // <= Define the number of steps for this test case and this device
  },
];

// https://polygonscan.com/tx/0x8e8346a06442cd212ee7e7973f5eea161e826503f5a59100d34adc3548440e33
const inputData = "0x1ae50184000000000000000000000000000000000000000000000000000000000000002000000000000000000000000046860b4dfe30ce16e6c3100c1be4344cd5941959000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000009c78ee466d6cb57a4d01fd887d2b5dfb2d46288f00000000000000000000000000000000000000000000000006f05b59d3b2000000000000000000000000000000000000000002ac21410048732257daf76981f100000000000000000000000000000000000000000000000000000000631ad595000000000000000000000000000000000000000000000000000000000000000300000000000000000000000085bc2e8aaad5dbc347db49ea45d95486279ed9180000000000000000000000000000000000000000000000000000000002faf0830000000000000000000000000000000000000000000000000000000000093a8000000000000000000000000000000000000000000000000000000000000005dc00000000000000000000000085bc2e8aaad5dbc347db49ea45d95486279ed9180000000000000000000000000000000000000000000000000000000001c9c3920000000000000000000000000000000000000000000000000000000000093a8000000000000000000000000000000000000000000000000000000000000005dc00000000000000000000000085bc2e8aaad5dbc347db49ea45d95486279ed91800000000000000000000000000000000000000000000000000000000001e86360000000000000000000000000000000000000000000000000000000000093a8000000000000000000000000000000000000000000000000000000000000005dc";
const serializedTx = populateTransaction(contractAddr, inputData, chainID);

devices.forEach((device) => {
  processTest(device, contractName, testLabel, testDirSuffix, "", signedPlugin, serializedTx, testNetwork);
});
